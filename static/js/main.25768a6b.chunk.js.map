{"version":3,"sources":["DndItemTypes.js","components/Team/Team.js","components/Position/Position.js","components/LeagueTable/Positions.js","components/LeagueTable/SampleData.js","hooks/useLocalStorage.js","components/LeagueTable/LeagueTable.js","components/App.js","registerServiceWorker.js","index.js"],"names":["ItemTypes","teamSource","beginDrag","props","sourceId","team","id","endDrag","monitor","didDrop","sourceTeam","getItem","targetTeam","getDropResult","swapPositions","DragSource","connect","connectDragSource","dragSource","isDragging","positionNumber","rank","updateTeamname","classes","classNames","className","style","cursor","onChange","evt","target","value","html","name","autoFocus","maxLength","disabled","editing","positionTarget","drop","DropTarget","connectDropTarget","dropTarget","isOver","item","findTeamRank","teamId","positions","findIndex","findTeam","find","SAMPLE_LEAGUE_TABLE","useLocalStorage","key","initialValue","storedValue","window","localStorage","JSON","parse","error","console","log","getValue","valueToStore","Function","setItem","stringify","LeagueTable","storedState","setStoredState","useState","setPositions","sourceTeamId","targetTeamId","currentPositions","clonedPositions","slice","sourceRank","targetRank","recalculateSwappedPositions","updatedText","teamRank","recalculatePositionsWithRenamedTeam","useEffect","positionNodes","map","index","DndProvider","backend","HTML5Backend","Col","md","Card","bg","Header","Title","Body","App","Container","Row","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","catch","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.25768a6b.chunk.js","sourcesContent":["export const ItemTypes = {\n  TEAM: 'team',\n};\n","import { DragSource } from 'react-dnd';\nimport React from 'react';\nimport { ItemTypes } from '../../DndItemTypes';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport ContentEditable from 'react-contenteditable';\n\nconst teamSource = {\n  beginDrag(props) {\n    // Return the data describing the dragged item\n    return { sourceId: props.team.id };\n  },\n\n  endDrag(props, monitor) {\n    if (!monitor.didDrop()) {\n      return;\n    }\n\n    // When dropped on a compatible target, do something\n    const sourceTeam = monitor.getItem();\n    const targetTeam = monitor.getDropResult();\n    props.swapPositions(sourceTeam.sourceId, targetTeam.id);\n  },\n};\n\nconst collect = (connect, monitor) => {\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging(),\n  };\n};\n\nconst calculatePositionCssClass = (positionNumber) => {\n  if (positionNumber === 1) {\n    return 'tabellenfuehrerClass tabelleClass';\n  }\n  if (positionNumber <= 3) {\n    return 'championsLeagueClass tabelleClass';\n  }\n  if (positionNumber <= 6) {\n    return 'europaLeagueClass tabelleClass';\n  }\n  if (positionNumber <= 15) {\n    return 'mittelfeldClass tabelleClass';\n  }\n  if (positionNumber === 16) {\n    return 'relegationClass tabelleClass';\n  } else {\n    return 'abstiegClass tabelleClass';\n  }\n};\n\nconst Team = (props) => {\n  const { rank, team, updateTeamname } = props;\n  // These two props are injected by React DnD,\n  // as defined by your `collect` function above:\n  const { connectDragSource } = props;\n  const classes = classNames(\n    'col-md-12',\n    'btn',\n    'text-bold',\n    calculatePositionCssClass(rank)\n  );\n\n  const onChange = (evt) => {\n    updateTeamname(team, evt.target.value);\n  };\n\n  return connectDragSource(\n    <div className={classes} style={{ cursor: 'pointer' }}>\n      <ContentEditable\n        onChange={onChange}\n        className=\"textPointer\"\n        html={team.name}\n        autoFocus={true}\n        maxLength={200}\n        disabled={!team.editing}\n      />\n    </div>\n  );\n};\n\nTeam.propTypes = {\n  connectDragSource: PropTypes.func.isRequired,\n  isDragging: PropTypes.bool.isRequired,\n  rank: PropTypes.number.isRequired,\n\n  // Injected by React DnD:\n  team: PropTypes.object.isRequired,\n  updateTeamname: PropTypes.func.isRequired,\n};\n\nexport default DragSource(ItemTypes.TEAM, teamSource, collect)(Team);\n","import React from 'react';\nimport { DropTarget } from 'react-dnd';\nimport Team from '../Team/Team';\nimport PropTypes from 'prop-types';\nimport { ItemTypes } from '../../DndItemTypes';\n\nconst positionTarget = {\n  drop(props) {\n    return props.team;\n  },\n};\n\nconst collect = (connect, monitor) => {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver(),\n    item: monitor.getItem(),\n  };\n};\n\nconst Position = (props) => {\n  const team = props.team;\n  const rank = props.rank;\n  const updateTeamname = props.updateTeamname;\n  const swapPositions = props.swapPositions;\n  const { connectDropTarget } = props;\n  return connectDropTarget(\n    <div>\n      <Team\n        team={team}\n        rank={rank}\n        updateTeamname={updateTeamname}\n        swapPositions={swapPositions}\n      />\n    </div>\n  );\n};\n\nPosition.propTypes = {\n  connectDropTarget: PropTypes.func.isRequired,\n  rank: PropTypes.number.isRequired,\n  swapPositions: PropTypes.func.isRequired,\n  team: PropTypes.object.isRequired,\n  updateTeamname: PropTypes.func.isRequired,\n};\nexport default DropTarget(ItemTypes.TEAM, positionTarget, collect)(Position);\n","const findTeamRank = (teamId, positions) => {\n  const zeroBasedIndex = positions.findIndex((team) => team.id === teamId);\n  return zeroBasedIndex + 1;\n};\n\nconst findTeam = (teamId, positions) => {\n  return positions.find((team) => team.id === teamId);\n};\n\nexport const recalculateSwappedPositions = (\n  sourceTeamId,\n  targetTeamId,\n  currentPositions\n) => {\n  const clonedPositions = currentPositions.slice();\n\n  const sourceRank = findTeamRank(sourceTeamId, clonedPositions);\n  const targetRank = findTeamRank(targetTeamId, clonedPositions);\n\n  const sourceTeam = findTeam(sourceTeamId, clonedPositions);\n  const targetTeam = findTeam(targetTeamId, clonedPositions);\n\n  clonedPositions[targetRank - 1] = sourceTeam;\n  clonedPositions[sourceRank - 1] = targetTeam;\n  return clonedPositions;\n};\n\nexport const recalculatePositionsWithRenamedTeam = (\n  team,\n  updatedText,\n  currentPositions\n) => {\n  const clonedPositions = currentPositions.slice();\n\n  const teamRank = findTeamRank(team.id, clonedPositions);\n\n  team.name = updatedText;\n\n  clonedPositions[teamRank - 1] = team;\n  return clonedPositions;\n};\n","export const SAMPLE_LEAGUE_TABLE = [\n  {\n    name: 'Borussia Mönchengladbach',\n    editing: true,\n    id: 'BMG',\n  },\n  {\n    name: 'Borussia Dortmund',\n    editing: true,\n    id: 'BVB',\n  },\n  {\n    name: 'FC Bayern München',\n    editing: true,\n    id: 'FCB',\n  },\n  {\n    name: 'VFL Wolfsburg',\n    editing: true,\n    id: 'VFL',\n  },\n  {\n    name: 'Bayer Leverkusen',\n    editing: true,\n    id: 'B04',\n  },\n  {\n    name: 'FC Schalke 04',\n    editing: true,\n    id: 'S04',\n  },\n  {\n    name: 'Hertha BSC Berlin',\n    editing: true,\n    id: 'BSC',\n  },\n  {\n    name: '1. FC Köln',\n    editing: true,\n    id: '1FC',\n  },\n  {\n    name: 'FC Ingolstadt',\n    editing: true,\n    id: 'FCI',\n  },\n  {\n    name: 'Darmstadt 98',\n    editing: true,\n    id: 'D98',\n  },\n  {\n    name: 'Hamburger SV',\n    editing: true,\n    id: 'HSV',\n  },\n  {\n    name: 'Eintracht Frankfurt',\n    editing: true,\n    id: 'SGE',\n  },\n  {\n    name: 'Werder Bremen',\n    editing: true,\n    id: 'SVW',\n  },\n  {\n    name: 'Hoffenheim',\n    editing: true,\n    id: 'SAP',\n  },\n  {\n    name: 'FC Augsburg',\n    editing: true,\n    id: 'FCA',\n  },\n  {\n    name: 'Hannover 96',\n    editing: true,\n    id: 'H96',\n  },\n  {\n    name: 'Mainz 05',\n    editing: true,\n    id: 'M05',\n  },\n  {\n    name: 'VFB Stuttgart',\n    editing: true,\n    id: 'VFB',\n  },\n];\n","const getValue = (key, initialValue) => {\n  try {\n    // Get from local storage by key\n    const item = window.localStorage.getItem(key);\n    // Parse stored json or if none return initialValue\n    return item ? JSON.parse(item) : initialValue;\n  } catch (error) {\n    // If error also return initialValue\n    console.log(error);\n    return initialValue;\n  }\n};\n\nexport const useLocalStorage = (key, initialValue) => {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const storedValue = getValue(key, initialValue);\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n};\n","import React, { useState, useEffect } from 'react';\nimport Position from '../Position/Position';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport {\n  recalculateSwappedPositions,\n  recalculatePositionsWithRenamedTeam,\n} from './Positions';\nimport { SAMPLE_LEAGUE_TABLE } from './SampleData';\nimport { Card, Col } from 'react-bootstrap';\nimport { useLocalStorage } from '../../hooks/useLocalStorage';\n\nconst LeagueTable = () => {\n  const [storedState, setStoredState] = useLocalStorage(\n    'LEAGUE_TABLE',\n    SAMPLE_LEAGUE_TABLE\n  );\n\n  const [positions, setPositions] = useState(storedState);\n\n  const swapPositions = (sourceTeamId, targetTeamId) => {\n    setPositions(\n      recalculateSwappedPositions(sourceTeamId, targetTeamId, positions)\n    );\n  };\n\n  const updateTeamname = (team, updatedText) => {\n    setPositions(\n      recalculatePositionsWithRenamedTeam(team, updatedText, positions)\n    );\n  };\n\n  useEffect(() => {\n    setStoredState(positions);\n  });\n\n  const positionNodes = positions.map((team, index) => (\n    <Position\n      team={team}\n      rank={index + 1}\n      key={index}\n      swapPositions={swapPositions}\n      updateTeamname={updateTeamname}\n    />\n  ));\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <Col md={6}>\n        <Card bg=\"dark\">\n          <Card.Header>\n            <Card.Title>Ligatabelle zum Selberstecken</Card.Title>\n          </Card.Header>\n          <Card.Body>{positionNodes}</Card.Body>\n        </Card>\n      </Col>\n    </DndProvider>\n  );\n};\n\nexport default LeagueTable;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport { Row, Container } from 'react-bootstrap';\nimport LeagueTable from './LeagueTable/LeagueTable';\n\nconst App = () => {\n  return (\n    <div className=\"index\">\n      <Container>\n        <Row>\n          <LeagueTable />\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}