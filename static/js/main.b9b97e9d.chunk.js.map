{"version":3,"sources":["components/Team.js","components/Position.js","model/Positions.js","components/LeagueTable.js","components/App.js","registerServiceWorker.js","index.js","constants/DndItemTypes.js","constants/SampleData.js"],"names":["calculatePositionCssClass","positionNumber","Team","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","render","rank","team","connectDragSource","classes","classNames","react_default","a","createElement","className","style","cursor","react_contenteditable_default","onChange","html","name","autoFocus","maxLength","disabled","editing","bind","assertThisInitialized","evt","updateTeamname","target","value","Component","DragSource","ItemTypes","TEAM","beginDrag","sourceId","id","endDrag","monitor","didDrop","sourceTeam","getItem","targetTeam","getDropResult","swapPositions","connect","dragSource","isDragging","Position","connectDropTarget","components_Team","DropTarget","drop","dropTarget","isOver","item","Positions","_findTeamRank","teamId","positions","findIndex","_findTeam","find","recalculateSwappedPositions","sourceTeamId","targetTeamId","currentPositions","clonedPositions","slice","sourceRank","targetRank","recalculatePositionsWithRenamedTeam","updatedText","teamRank","LeagueTable","_Component","defaultState","SAMPLE_LEAGUE_TABLE","newTeam","positionNodes","state","map","index","components_Position","key","Col","md","Card","bg","Header","Title","Body","setState","getInitialState","inherits","createClass","_","isUndefined","localStorage","localstate","JSON","parse","stringify","DragDropContext","HTML5Backend","App","Container","Row","components_LeagueTable","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","src_components_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","exports"],"mappings":"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","file":"static/js/main.b9b97e9d.chunk.js","sourcesContent":["import { DragSource } from 'react-dnd';\nimport React, { Component } from 'react';\nimport { ItemTypes } from '../constants/DndItemTypes';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport ContentEditable from 'react-contenteditable';\n\nconst teamSource = {\n  beginDrag(props) {\n    // Return the data describing the dragged item\n    return { sourceId: props.team.id };\n  },\n\n  endDrag(props, monitor) {\n    if (!monitor.didDrop()) {\n      return;\n    }\n\n    // When dropped on a compatible target, do something\n    const sourceTeam = monitor.getItem();\n    const targetTeam = monitor.getDropResult();\n    props.swapPositions(sourceTeam.sourceId, targetTeam.id);\n  }\n};\n\nconst collect = (connect, monitor) => {\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging()\n  };\n};\n\nconst calculatePositionCssClass = positionNumber => {\n  if (positionNumber === 1) {\n    return 'tabellenfuehrerClass tabelleClass';\n  }\n  if (positionNumber <= 3) {\n    return 'championsLeagueClass tabelleClass';\n  }\n  if (positionNumber <= 6) {\n    return 'europaLeagueClass tabelleClass';\n  }\n  if (positionNumber <= 15) {\n    return 'mittelfeldClass tabelleClass';\n  }\n  if (positionNumber === 16) {\n    return 'relegationClass tabelleClass';\n  } else {\n    return 'abstiegClass tabelleClass';\n  }\n};\n\nclass Team extends Component {\n  static propTypes = {\n    connectDragSource: PropTypes.func.isRequired,\n    isDragging: PropTypes.bool.isRequired,\n    rank: PropTypes.number.isRequired,\n\n    // Injected by React DnD:\n    team: PropTypes.object.isRequired,\n    updateTeamname: PropTypes.func.isRequired\n  };\n  constructor(props) {\n    super(props);\n    this.onChange = this.onChange.bind(this);\n  }\n  render = () => {\n    const rank = this.props.rank;\n    const team = this.props.team;\n    // These two props are injected by React DnD,\n    // as defined by your `collect` function above:\n    const { connectDragSource } = this.props;\n    const classes = classNames(\n      'col-md-12',\n      'btn',\n      'text-bold',\n      calculatePositionCssClass(rank)\n    );\n    return connectDragSource(\n      <div className={classes} style={{ cursor: 'pointer' }}>\n        <ContentEditable\n          onChange={this.onChange}\n          className=\"textPointer\"\n          html={team.name}\n          autoFocus={true}\n          maxLength={200}\n          disabled={!this.props.team.editing}\n        />\n      </div>\n    );\n  };\n\n  onChange(evt) {\n    this.props.updateTeamname(this.props.team, evt.target.value);\n  }\n}\n\nexport default DragSource(ItemTypes.TEAM, teamSource, collect)(Team);\n","import React, { Component } from 'react';\nimport { DropTarget } from 'react-dnd';\nimport Team from './Team';\nimport PropTypes from 'prop-types';\nimport { ItemTypes } from '../constants/DndItemTypes';\n\nconst positionTarget = {\n  drop(props) {\n    return props.team;\n  }\n};\n\nconst collect = (connect, monitor) => {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver(),\n    item: monitor.getItem()\n  };\n};\n\nclass Position extends Component {\n  static propTypes = {\n    connectDropTarget: PropTypes.func.isRequired,\n    rank: PropTypes.number.isRequired,\n    swapPositions: PropTypes.func.isRequired,\n    team: PropTypes.object.isRequired,\n    updateTeamname: PropTypes.func.isRequired\n  };\n\n  render() {\n    const team = this.props.team;\n    const rank = this.props.rank;\n    const updateTeamname = this.props.updateTeamname;\n    const swapPositions = this.props.swapPositions;\n    const { connectDropTarget } = this.props;\n    return connectDropTarget(\n      <div>\n        <Team\n          team={team}\n          rank={rank}\n          updateTeamname={updateTeamname}\n          swapPositions={swapPositions}\n        />\n      </div>\n    );\n  }\n}\n\nexport default DropTarget(ItemTypes.TEAM, positionTarget, collect)(Position);\n","export default class Positions {\n  static _findTeamRank = (teamId, positions) => {\n    const zeroBasedIndex = positions.findIndex(team => team.id === teamId);\n    return zeroBasedIndex + 1;\n  };\n\n  static _findTeam = (teamId, positions) => {\n    return positions.find(team => team.id === teamId);\n  };\n\n  static recalculateSwappedPositions = (\n    sourceTeamId,\n    targetTeamId,\n    currentPositions\n  ) => {\n    const clonedPositions = currentPositions.slice();\n\n    const sourceRank = Positions._findTeamRank(sourceTeamId, clonedPositions);\n    const targetRank = Positions._findTeamRank(targetTeamId, clonedPositions);\n\n    const sourceTeam = Positions._findTeam(sourceTeamId, clonedPositions);\n    const targetTeam = Positions._findTeam(targetTeamId, clonedPositions);\n\n    clonedPositions[targetRank - 1] = sourceTeam;\n    clonedPositions[sourceRank - 1] = targetTeam;\n    return clonedPositions;\n  };\n\n  static recalculatePositionsWithRenamedTeam = (\n    team,\n    updatedText,\n    currentPositions\n  ) => {\n    const clonedPositions = currentPositions.slice();\n\n    const teamRank = Positions._findTeamRank(team.id, clonedPositions);\n\n    //team.editing = false;\n    team.name = updatedText;\n\n    clonedPositions[teamRank - 1] = team;\n    return clonedPositions;\n  };\n}\n","import React, { Component } from 'react';\nimport Position from './Position';\nimport Positions from '../model/Positions';\nimport { DragDropContext } from 'react-dnd';\nimport _ from 'lodash';\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport { SAMPLE_LEAGUE_TABLE } from '../constants/SampleData';\nimport { Card, Col } from 'react-bootstrap';\n\nexport class LeagueTable extends Component {\n  defaultState = {\n    positions: SAMPLE_LEAGUE_TABLE,\n    newTeam: {}\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = this.getInitialState();\n    this.swapPositions = this.swapPositions.bind(this);\n    this.updateTeamname = this.updateTeamname.bind(this);\n  }\n\n  getInitialState() {\n    if (_.isUndefined(localStorage.state)) {\n      return this.defaultState;\n    }\n    const localstate = JSON.parse(localStorage.state);\n\n    if (_.isUndefined(localstate)) {\n      return this.defaultState;\n    }\n    return localstate;\n  }\n\n  componentDidUpdate() {\n    //unused params prevProps and prevState\n    localStorage.state = JSON.stringify(this.state);\n  }\n\n  render = () => {\n    const positionNodes = this.state.positions.map((team, index) => (\n      <Position\n        team={team}\n        rank={index + 1}\n        key={index}\n        swapPositions={this.swapPositions}\n        updateTeamname={this.updateTeamname}\n      />\n    ));\n\n    return (\n      <Col md={6}>\n        <Card bg=\"dark\">\n          <Card.Header>\n            <Card.Title>Ligatabelle zum Selberstecken</Card.Title>\n          </Card.Header>\n          <Card.Body>{positionNodes}</Card.Body>\n        </Card>\n      </Col>\n    );\n  };\n\n  swapPositions = (sourceTeamId, targetTeamId) => {\n    this.setState({\n      positions: Positions.recalculateSwappedPositions(\n        sourceTeamId,\n        targetTeamId,\n        this.state.positions\n      ),\n      newTeam: {}\n    });\n  };\n\n  updateTeamname = (team, updatedText) => {\n    this.setState({\n      positions: Positions.recalculatePositionsWithRenamedTeam(\n        team,\n        updatedText,\n        this.state.positions\n      )\n    });\n  };\n}\n\nexport default DragDropContext(HTML5Backend)(LeagueTable);\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport { Row, Container } from 'react-bootstrap';\nimport LeagueTable from './LeagueTable';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"index\">\n        <Container>\n          <Row>\n            <LeagueTable />\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n","exports.ItemTypes = {\n  TEAM: 'team'\n};\n","exports.SAMPLE_LEAGUE_TABLE = [\n  {\n    name: 'Borussia Mönchengladbach',\n    editing: true,\n    id: 'BMG'\n  },\n  {\n    name: 'Borussia Dortmund',\n    editing: true,\n    id: 'BVB'\n  },\n  {\n    name: 'FC Bayern München',\n    editing: true,\n    id: 'FCB'\n  },\n  {\n    name: 'VFL Wolfsburg',\n    editing: true,\n    id: 'VFL'\n  },\n  {\n    name: 'Bayer Leverkusen',\n    editing: true,\n    id: 'B04'\n  },\n  {\n    name: 'FC Schalke 04',\n    editing: true,\n    id: 'S04'\n  },\n  {\n    name: 'Hertha BSC Berlin',\n    editing: true,\n    id: 'BSC'\n  },\n  {\n    name: '1. FC Köln',\n    editing: true,\n    id: '1FC'\n  },\n  {\n    name: 'FC Ingolstadt',\n    editing: true,\n    id: 'FCI'\n  },\n  {\n    name: 'Darmstadt 98',\n    editing: true,\n    id: 'D98'\n  },\n  {\n    name: 'Hamburger SV',\n    editing: true,\n    id: 'HSV'\n  },\n  {\n    name: 'Eintracht Frankfurt',\n    editing: true,\n    id: 'SGE'\n  },\n  {\n    name: 'Werder Bremen',\n    editing: true,\n    id: 'SVW'\n  },\n  {\n    name: 'Hoffenheim',\n    editing: true,\n    id: 'SAP'\n  },\n  {\n    name: 'FC Augsburg',\n    editing: true,\n    id: 'FCA'\n  },\n  {\n    name: 'Hannover 96',\n    editing: true,\n    id: 'H96'\n  },\n  {\n    name: 'Mainz 05',\n    editing: true,\n    id: 'M05'\n  },\n  {\n    name: 'VFB Stuttgart',\n    editing: true,\n    id: 'VFB'\n  }\n];\n"],"sourceRoot":""}