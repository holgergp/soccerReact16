{"version":3,"sources":["constants/SampleData.js","components/Team.js","components/Position.js","model/Positions.js","components/LeagueTable.js","components/App.js","registerServiceWorker.js","index.js","constants/DndItemTypes.js"],"names":["exports","SAMPLE_LEAGUE_TABLE","name","editing","id","calculatePositionCssClass","positionNumber","Team","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","render","rank","team","connectDragSource","classes","classNames","react_default","a","createElement","className","style","cursor","react_contenteditable_default","onChange","html","autoFocus","maxLength","disabled","bind","assertThisInitialized","evt","updateTeamname","target","value","Component","DragSource","ItemTypes","TEAM","beginDrag","sourceId","endDrag","monitor","didDrop","sourceTeam","getItem","targetTeam","getDropResult","swapPositions","connect","dragSource","isDragging","Position","connectDropTarget","components_Team","DropTarget","drop","dropTarget","isOver","item","Positions","_findTeamRank","teamId","positions","findIndex","_findTeam","find","recalculateSwappedPositions","sourceTeamId","targetTeamId","currentPositions","clonedPositions","slice","sourceRank","targetRank","recalculatePositionsWithRenamedTeam","updatedText","teamRank","LeagueTable","_Component","defaultState","newTeam","positionNodes","state","map","index","components_Position","key","Col","md","Panel","bsStyle","Heading","Title","componentClass","setState","getInitialState","inherits","createClass","_","isUndefined","localStorage","localstate","JSON","parse","stringify","DragDropContext","HTML5Backend","App","Grid","Row","components_LeagueTable","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","src_components_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2746c5ff.chunk.js","sourcesContent":["exports.SAMPLE_LEAGUE_TABLE = [\n    {\n        name: 'Borussia Mönchengladbach',\n        editing: true,\n        id: 'BMG'\n    },\n    {\n        name: 'Borussia Dortmund',\n        editing: true,\n        id: 'BVB'\n    },\n    {\n        name: 'FC Bayern München',\n        editing: true,\n        id: 'FCB'\n    },\n    {\n        name: 'VFL Wolfsburg',\n        editing: true,\n        id: 'VFL'\n    },\n    {\n        name: 'Bayer Leverkusen',\n        editing: true,\n        id: 'B04'\n    },\n    {\n        name: 'FC Schalke 04',\n        editing: true,\n        id: 'S04'\n    },\n    {\n        name: 'Hertha BSC Berlin',\n        editing: true,\n        id: 'BSC'\n    },\n    {\n        name: '1. FC Köln',\n        editing: true,\n        id: '1FC'\n    },\n    {\n        name: 'FC Ingolstadt',\n        editing: true,\n        id: 'FCI'\n    },\n    {\n        name: 'Darmstadt 98',\n        editing: true,\n        id: 'D98'\n    },\n    {\n        name: 'Hamburger SV',\n        editing: true,\n        id: 'HSV'\n    },\n    {\n        name: 'Eintracht Frankfurt',\n        editing: true,\n        id: 'SGE'\n    },\n    {\n        name: 'Werder Bremen',\n        editing: true,\n        id: 'SVW'\n    },\n    {\n        name: 'Hoffenheim',\n        editing: true,\n        id: 'SAP'\n    },\n    {\n        name: 'FC Augsburg',\n        editing: true,\n        id: 'FCA'\n    },\n    {\n        name: 'Hannover 96',\n        editing: true,\n        id: 'H96'\n    },\n    {\n        name: 'Mainz 05',\n        editing: true,\n        id: 'M05'\n    },\n    {\n        name: 'VFB Stuttgart',\n        editing: true,\n        id: 'VFB'\n    }\n];\n","import {DragSource} from 'react-dnd';\nimport React, {Component} from 'react';\nimport {ItemTypes} from '../constants/DndItemTypes';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport ContentEditable from 'react-contenteditable';\n\nconst teamSource = {\n    beginDrag(props) {\n    // Return the data describing the dragged item\n        return {sourceId: props.team.id};\n    },\n\n    endDrag(props, monitor) {\n        if (!monitor.didDrop()) {\n            return;\n        }\n\n        // When dropped on a compatible target, do something\n        const sourceTeam = monitor.getItem();\n        const targetTeam = monitor.getDropResult();\n        props.swapPositions(sourceTeam.sourceId, targetTeam.id);\n    }\n};\n\nconst collect = (connect, monitor) => {\n    return {\n        connectDragSource: connect.dragSource(),\n        isDragging: monitor.isDragging()\n    };\n};\n\nconst calculatePositionCssClass = positionNumber => {\n    if (positionNumber === 1) {\n        return 'tabellenfuehrerClass tabelleClass';\n    }\n    if (positionNumber <= 3) {\n        return 'championsLeagueClass tabelleClass';\n    }\n    if (positionNumber <= 6) {\n        return 'europaLeagueClass tabelleClass';\n    }\n    if (positionNumber <= 15) {\n        return 'mittelfeldClass tabelleClass';\n    }\n    if (positionNumber === 16) {\n        return 'relegationClass tabelleClass';\n    } else {\n        return 'abstiegClass tabelleClass';\n    }\n};\n\nclass Team extends Component {\n  static propTypes = {\n      connectDragSource: PropTypes.func.isRequired,\n      isDragging: PropTypes.bool.isRequired,\n      rank: PropTypes.number.isRequired,\n\n      // Injected by React DnD:\n      team: PropTypes.object.isRequired,\n      updateTeamname: PropTypes.func.isRequired\n  };\n  constructor(props) {\n      super(props);\n      this.onChange = this.onChange.bind(this);\n  }\n  render = () => {\n      const rank = this.props.rank;\n      const team = this.props.team;\n      // These two props are injected by React DnD,\n      // as defined by your `collect` function above:\n      const {connectDragSource} = this.props;\n      const classes = classNames(\n          'col-md-12',\n          'btn',\n          calculatePositionCssClass(rank)\n      );\n      return connectDragSource(\n          <div className={classes} style={{cursor: 'pointer'}}>\n              <ContentEditable\n                  onChange={this.onChange}\n                  className=\"textPointer\"\n                  html={team.name}\n                  autoFocus={true}\n                  maxLength={200}\n                  disabled={!this.props.team.editing}\n              />\n          </div>\n      );\n  };\n\n  onChange(evt) {\n      this.props.updateTeamname(this.props.team, evt.target.value);\n  }\n}\n\nexport default DragSource(ItemTypes.TEAM, teamSource, collect)(Team);\n","import React, {Component} from 'react';\nimport {DropTarget} from 'react-dnd';\nimport Team from './Team';\nimport PropTypes from 'prop-types';\nimport {ItemTypes} from '../constants/DndItemTypes';\n\nconst positionTarget = {\n    drop(props) {\n        return props.team;\n    }\n};\n\nconst collect = (connect, monitor) => {\n    return {\n        connectDropTarget: connect.dropTarget(),\n        isOver: monitor.isOver(),\n        item: monitor.getItem()\n    };\n};\n\nclass Position extends Component {\n  static propTypes = {\n      connectDropTarget: PropTypes.func.isRequired,\n      rank: PropTypes.number.isRequired,\n      swapPositions: PropTypes.func.isRequired,\n      team: PropTypes.object.isRequired,\n      updateTeamname: PropTypes.func.isRequired\n  };\n\n  render() {\n      const team = this.props.team;\n      const rank = this.props.rank;\n      const updateTeamname = this.props.updateTeamname;\n      const swapPositions = this.props.swapPositions;\n      const {connectDropTarget} = this.props;\n      return connectDropTarget(\n          <div>\n              <span>\n                  <Team\n                      team={team}\n                      rank={rank}\n                      updateTeamname={updateTeamname}\n                      swapPositions={swapPositions}\n                  />\n              </span>\n          </div>\n      );\n  }\n}\n\nexport default DropTarget(ItemTypes.TEAM, positionTarget, collect)(Position);\n","export default class Positions {\n  static _findTeamRank = (teamId, positions) => {\n      const zeroBasedIndex = positions.findIndex(team => team.id === teamId);\n      return zeroBasedIndex + 1;\n  };\n\n  static _findTeam = (teamId, positions) => {\n      return positions.find(team => team.id === teamId);\n  };\n\n  static recalculateSwappedPositions = (\n      sourceTeamId,\n      targetTeamId,\n      currentPositions\n  ) => {\n      const clonedPositions = currentPositions.slice();\n\n      const sourceRank = Positions._findTeamRank(sourceTeamId, clonedPositions);\n      const targetRank = Positions._findTeamRank(targetTeamId, clonedPositions);\n\n      const sourceTeam = Positions._findTeam(sourceTeamId, clonedPositions);\n      const targetTeam = Positions._findTeam(targetTeamId, clonedPositions);\n\n      clonedPositions[targetRank - 1] = sourceTeam;\n      clonedPositions[sourceRank - 1] = targetTeam;\n      return clonedPositions;\n  };\n\n  static recalculatePositionsWithRenamedTeam = (\n      team,\n      updatedText,\n      currentPositions\n  ) => {\n      const clonedPositions = currentPositions.slice();\n\n      const teamRank = Positions._findTeamRank(team.id, clonedPositions);\n\n      //team.editing = false;\n      team.name = updatedText;\n\n      clonedPositions[teamRank - 1] = team;\n      return clonedPositions;\n  };\n}\n","import React, {Component} from 'react';\nimport Position from './Position';\nimport Positions from '../model/Positions';\nimport {DragDropContext} from 'react-dnd';\nimport _ from 'lodash';\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport {SAMPLE_LEAGUE_TABLE} from '../constants/SampleData';\nimport {Panel, Col} from 'react-bootstrap';\n\nexport class LeagueTable extends Component {\n  defaultState = {\n      positions: SAMPLE_LEAGUE_TABLE,\n      newTeam: {}\n  };\n\n  constructor(props) {\n      super(props);\n      this.state = this.getInitialState();\n      this.swapPositions = this.swapPositions.bind(this);\n      this.updateTeamname = this.updateTeamname.bind(this);\n  }\n\n  getInitialState() {\n      if (_.isUndefined(localStorage.state)) {\n          return this.defaultState;\n      }\n      const localstate = JSON.parse(localStorage.state);\n\n      if (_.isUndefined(localstate)) {\n          return this.defaultState;\n      }\n      return localstate;\n  }\n\n  componentDidUpdate() {\n      //unused params prevProps and prevState\n      localStorage.state = JSON.stringify(this.state);\n  }\n\n  render = () => {\n      const positionNodes = this.state.positions.map((team, index) => (\n          <Position\n              team={team}\n              rank={index + 1}\n              key={index}\n              swapPositions={this.swapPositions}\n              updateTeamname={this.updateTeamname}\n          />\n      ));\n\n      return (\n          <Col md={6}>\n              <Panel bsStyle=\"primary\">\n                  <Panel.Heading>\n                      <Panel.Title componentClass=\"h3\">\n              Ligatabelle zum Selberstecken\n                      </Panel.Title>\n                  </Panel.Heading>\n                  <div className=\"panel-body\">{positionNodes}</div>\n              </Panel>\n          </Col>\n      );\n  };\n\n  swapPositions = (sourceTeamId, targetTeamId) => {\n      this.setState({\n          positions: Positions.recalculateSwappedPositions(\n              sourceTeamId,\n              targetTeamId,\n              this.state.positions\n          ),\n          newTeam: {}\n      });\n  };\n\n  updateTeamname = (team, updatedText) => {\n      this.setState({\n          positions: Positions.recalculatePositionsWithRenamedTeam(\n              team,\n              updatedText,\n              this.state.positions\n          )\n      });\n  };\n}\n\nexport default DragDropContext(HTML5Backend)(LeagueTable);\n","import React, {Component} from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/css/bootstrap-theme.css';\nimport './App.css';\nimport {Row, Grid} from 'react-bootstrap';\nimport LeagueTable from './LeagueTable';\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"index\">\n                <Grid>\n                    <Row>\n                        <LeagueTable />\n                    </Row>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n                    );\n                });\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the old content will have been purged and\n                            // the fresh content will have been added to the cache.\n                            // It's the perfect time to display a \"New content is\n                            // available; please refresh.\" message in your web app.\n                            console.log('New content is available; please refresh.');\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/css/bootstrap-theme.css';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n","exports.ItemTypes = {\n    TEAM: 'team'\n};\n"],"sourceRoot":""}